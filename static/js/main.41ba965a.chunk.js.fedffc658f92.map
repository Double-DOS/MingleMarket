{"version":3,"sources":["assets/hey_mingle.png","store/actions/auth.js","store/actions/actionTypes.js","store/actions/message.js","websocket.js","hoc/hoc.js","containers/Chat.js","routes.js","components/Contact.js","containers/Sidepanel.js","store/actions/nav.js","containers/Profile.js","containers/Form.js","containers/Popup.js","containers/Login.js","containers/Homepage.js","containers/Register.js","containers/Navbar.js","containers/UserProfile.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","store/reducers/nav.js","store/reducers/message.js","index.js"],"names":["module","exports","authSuccess","username","token","type","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","password","axios","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","getUserChats","defaults","headers","Authorization","get","chats","WebSocketService","callbacks","this","socketRef","instance","chatURL","path","console","log","WebSocket","onopen","socketNewMessage","JSON","stringify","command","onmessage","e","onerror","mesage","onclose","connect","close","parsedData","parse","Object","keys","length","messages","message","chatId","sendMessage","from","content","messagesCallbacks","newMessageCallbacks","send","mesasge","readyState","callback","socket","recursion","waitForSocketConnection","WebSocketInstance","getInstance","Hoc","props","children","Chat","state","messageChangeHandler","event","setState","target","value","sendMessageHandler","preventDefault","messageObject","match","params","chatID","newChatMessage","renderTimestamp","timestamp","timeDiff","Math","round","renderMessages","currentUser","map","i","arr","id","className","author","src","alt","initialiseChat","fetchMessages","newProps","disconnect","component","onSubmit","onChange","required","placeholder","aria-hidden","React","Component","auth","BaseRouter","useRouteMatch","Contact","url","to","style","color","picURL","name","status","Sidepanel","undefined","waitForAuthDetails","addChat","activeChats","c","onClick","openAddChatPopup","authActions","msgActions","Profile","AddChatForm","usernames","handleChange","handleFinish","values","combinedUsers","xsrfHeaderName","xsrfCookieName","participants","history","push","closeAddChatPopup","layout","rules","onFinish","Item","mode","width","htmlType","withRouter","messageActions","AddChatModal","centered","footer","visible","isVisible","onCancel","antIcon","LoadingOutlined","fontSize","spin","Login","authenticate","login","loading","indicator","isAuthenticated","method","autoFocus","htmlFor","href","userName","signup","Homepage","loginForm","changeForm","Header","guestLinks","authLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","logo","height","UserProfile","labelCol","span","wrapperCol","validateMessages","types","number","Demo","label","TextArea","offset","App","addCallbacks","setMessages","bind","addMessage","onTryAutoSignup","Navbar","Register","showAddChatPopup","exact","nav","authenticated","getItem","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","authStart","action","authLogout","authReducer","navReducer","reverse","setChats","msgReducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","rootReducer","combineReducers","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41ba965a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hey_mingle.836efd55.png\";","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (username, token) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username: username,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"username\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 10000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n        username: username,\n        password: password,\n      })\n      .then((res) => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(username, token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2,\n      })\n      .then((res) => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(username, token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(username, token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const OPEN_ADD_CHAT_POPUP = \"OPEN_ADD_CHAT_POPUP\";\nexport const CLOSE_ADD_CHAT_POPUP = \"CLOSE_ADD_CHAT_POPUP\";\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\nexport const SET_MESSAGES = \"SET_MESSAGES\";\nexport const GET_CHATS_SUCCESS = \"GET_CHATS_SUCCESS\";","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const addMessage = (message) => {\n  return {\n    type: actionTypes.ADD_MESSAGE,\n    message: message,\n  };\n};\n\nexport const setMessages = (messages) => {\n  return {\n    type: actionTypes.SET_MESSAGES,\n    messages: messages,\n  };\n};\n\nconst getUserChatsSuccess = (chats) => {\n  return {\n    type: actionTypes.GET_CHATS_SUCCESS,\n    chats: chats,\n  };\n};\n\nexport const getUserChats = (username, token) => {\n  return (dispatch) => {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`,\n    };\n    axios\n      .get(`http://127.0.0.1:8000/chat/?username=${username}`)\n      .then((res) => dispatch(getUserChatsSuccess(res.data)));\n  };\n};\n","class WebSocketService {\n  static instance = null;\n  callbacks = {};\n  static getInstance() {\n    if (!WebSocketService.instance) {\n      WebSocketService.instance = new WebSocketService();\n    }\n    return WebSocketService.instance;\n  }\n  constructor() {\n    this.socketRef = null;\n  }\n  connect(chatURL) {\n    // var ws_scheme = window.location.protocol == \"https:\" ? \"wss\" : \"ws\";\n    // const path =\n    //   ws_scheme + \"://\" + window.location.host + \"/ws/chat\" + `/${chatURL}`;\n    const path = `ws://localhost:8000/ws/chat/${chatURL}/`;\n    console.log(path);\n    this.socketRef = new WebSocket(path);\n    this.socketRef.onopen = () => {\n      console.log(\"websocket is open\");\n    };\n    this.socketNewMessage(JSON.stringify({ command: \"fetch_messages\" }));\n    this.socketRef.onmessage = (e) => {\n      this.socketNewMessage(e.data);\n    };\n    this.socketRef.onerror = (e) => {\n      console.log(e.mesage);\n    };\n    this.socketRef.onclose = () => {\n      console.log(\"websocket is closed\");\n      this.connect();\n    };\n  }\n  disconnect() {\n    this.socketRef.close();\n    this.socketRef.onclose = () => {\n      console.log(\"socket is closed\");\n    };\n  }\n  socketNewMessage(data) {\n    const parsedData = JSON.parse(data);\n    const command = parsedData.command;\n    if (Object.keys(this.callbacks).length === 0) {\n      return;\n    }\n    if (command === \"messages\") {\n      this.callbacks[command](parsedData.messages);\n    }\n    if (command === \"new_message\") {\n      this.callbacks[command](parsedData.message);\n    }\n  }\n\n  fetchMessages(username, chatId) {\n    this.sendMessage({\n      command: \"fetch_messages\",\n      username: username,\n      chatId: chatId,\n    });\n  }\n\n  newChatMessage(message) {\n    this.sendMessage({\n      command: \"new_message\",\n      from: message.from,\n      message: message.content,\n      chatId: message.chatId,\n    });\n  }\n\n  addCallbacks(messagesCallbacks, newMessageCallbacks) {\n    this.callbacks[\"messages\"] = messagesCallbacks;\n    this.callbacks[\"new_message\"] = newMessageCallbacks;\n  }\n\n  sendMessage(data) {\n    try {\n      this.socketRef.send(JSON.stringify({ ...data }));\n    } catch (err) {\n      console.log(err.mesasge);\n    }\n  }\n\n  state() {\n    return this.socketRef.readyState;\n  }\n\n  waitForSocketConnection(callback) {\n    const socket = this.socketRef;\n    const recursion = this.waitForSocketConnection;\n    setTimeout(function () {\n      if (socket.readyState === 1) {\n        console.log(\"Connection is secure\");\n        if (callback != null) {\n          callback();\n        }\n        return;\n      } else {\n        console.log(\"Waiting for connection....\");\n        recursion(callback);\n      }\n    }, 1);\n  }\n}\n\nconst WebSocketInstance = WebSocketService.getInstance();\n\nexport default WebSocketInstance;\n","const Hoc = (props) => props.children;\n\nexport default Hoc;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport WebSocketInstance from \"../websocket\";\nimport Hoc from \"../hoc/hoc\";\n\nclass Chat extends React.Component {\n  state = { message: \"\" };\n  initialiseChat() {\n    this.waitForSocketConnection(() => {\n      // WebSocketInstance.addCallbacks(\n      //   this.setMessages.bind(this),\n      //   this.addMessage.bind(this)\n      // );\n      WebSocketInstance.fetchMessages(\n        this.props.username,\n        this.props.match.params.chatID\n      );\n    });\n    WebSocketInstance.connect(this.props.match.params.chatID);\n  }\n  constructor(props) {\n    super(props);\n    this.initialiseChat();\n  }\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (this.props.match.params.chatID !== newProps.match.params.chatID) {\n      WebSocketInstance.disconnect();\n      this.waitForSocketConnection(() => {\n        WebSocketInstance.fetchMessages(\n          this.props.username,\n          newProps.match.params.chatID\n        );\n      });\n      WebSocketInstance.connect(newProps.match.params.chatID);\n    }\n  }\n  waitForSocketConnection(callback) {\n    const component = this;\n    setTimeout(function () {\n      if (WebSocketInstance.state() === 1) {\n        console.log(\"Connection is made\");\n        callback();\n        return;\n      } else {\n        console.log(\"wait for connection...\");\n        component.waitForSocketConnection(callback);\n      }\n    }, 100);\n  }\n\n  // addMessage(message) {\n  //   this.setState({ messages: [...this.state.messages, message] });\n  // }\n\n  // setMessages(messages) {\n  //   this.setState({ messages: messages.reverse() });\n  // }\n\n  messageChangeHandler = (event) => {\n    this.setState({\n      message: event.target.value,\n    });\n  };\n\n  sendMessageHandler = (e) => {\n    e.preventDefault();\n    const messageObject = {\n      from: this.props.username,\n      content: this.state.message,\n      chatId: this.props.match.params.chatID,\n    };\n    WebSocketInstance.newChatMessage(messageObject);\n    this.setState({\n      message: \"\",\n    });\n  };\n\n  renderTimestamp = (timestamp) => {\n    let prefix = \"\";\n    const timeDiff = Math.round(\n      (new Date().getTime() - new Date(timestamp).getTime()) / 60000\n    );\n    if (timeDiff < 1) {\n      // less than one minute ago\n      prefix = \"just now...\";\n    } else if (timeDiff < 60 && timeDiff > 1) {\n      // less than sixty minutes ago\n      prefix = `${timeDiff} minutes ago`;\n    } else if (timeDiff < 24 * 60 && timeDiff > 60) {\n      // less than 24 hours ago\n      prefix = `${Math.round(timeDiff / 60)} hours ago`;\n    } else if (timeDiff < 31 * 24 * 60 && timeDiff > 24 * 60) {\n      // less than 7 days ago\n      prefix = `${Math.round(timeDiff / (60 * 24))} days ago`;\n    } else {\n      prefix = `${new Date(timestamp)}`;\n    }\n    return prefix;\n  };\n\n  renderMessages = (messages) => {\n    const currentUser = this.props.username;\n    return messages.map((message, i, arr) => (\n      <div\n        key={message.id}\n        className={\n          message.author === currentUser\n            ? \"d-flex justify-content-end mb-4\"\n            : \"d-flex justify-content-start mb-4\"\n        }\n      >\n        <div className=\"img_cont_msg\">\n          <img\n            src=\"http://emilcarlsson.se/assets/mikeross.png\"\n            className=\"rounded-circle user_img_msg\"\n            alt=\"user\"\n          />\n        </div>\n        <div className=\"msg_cotainer\">\n          {message.content}\n          <span className=\"msg_time\">\n            {this.renderTimestamp(message.timestamp)}\n          </span>\n        </div>\n      </div>\n    ));\n  };\n  /*\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n*/\n  render() {\n    return (\n      <Hoc>\n        <div className=\"card-body msg_card_body\">\n          {this.props.messages && this.renderMessages(this.props.messages)}\n        </div>\n        <div className=\"card-footer\">\n          <form onSubmit={this.sendMessageHandler}>\n            <div className=\"input-group\">\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text attach_btn\">\n                  <i className=\"fas fa-paperclip\"></i>\n                </span>\n              </div>\n              <input\n                onChange={this.messageChangeHandler}\n                value={this.state.message}\n                required\n                className=\"form-control type_msg\"\n                id=\"chat-message-input\"\n                type=\"text\"\n                placeholder=\"Type your message...\"\n              />\n              <div id=\"chat-message-submit\" className=\"input-group-append\">\n                <span className=\"input-group-text send_btn\">\n                  <i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </form>\n        </div>\n      </Hoc>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.auth.username,\n    messages: state.message.messages,\n  };\n};\n\nexport default connect(mapStateToProps)(Chat);\n","import React from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport Chat from \"./containers/Chat\";\n\nexport default BaseRouter;\nfunction BaseRouter() {\n  let { path } = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={`${path}/:chatID`} component={Chat} />\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\n\nfunction Contact(props) {\n  let { url } = useRouteMatch();\n\n  return (\n    <NavLink to={`${url}${props.chatURL}`} style={{ color: \"#fff\" }}>\n      <li className=\"active\">\n        <div className=\"d-flex bd-highlight\">\n          <div className=\"img_cont\">\n            <img\n              src={props.picURL}\n              alt={props.name}\n              className=\"rounded-circle user_img\"\n            />\n            <span className={`${props.status}_icon`}></span>\n          </div>\n          <div className=\"user_info\">\n            <span>{props.name}</span>\n            {/* <p>Kalid is online</p> */}\n          </div>\n        </div>\n      </li>\n    </NavLink>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as authActions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport * as msgActions from \"../store/actions/message\";\nimport Contact from \"../components/Contact\";\n\nclass Sidepanel extends React.Component {\n  waitForAuthDetails() {\n    const component = this;\n    setTimeout(() => {\n      if (\n        component.props.token !== null &&\n        component.props.token !== undefined\n      ) {\n        component.props.getUserChats(\n          component.props.username,\n          component.props.token\n        );\n        return;\n      } else {\n        console.log(\"waiting for auth details\");\n        component.waitForAuthDetails();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.waitForAuthDetails();\n  }\n\n  openAddChatPopup() {\n    this.props.addChat();\n  }\n  render() {\n    const activeChats = this.props.chats.map((c) => {\n      return (\n        <Contact\n          key={c.id}\n          name={`${c.name}`}\n          status=\"online\"\n          picURL=\"http://emilcarlsson.se/assets/louislitt.png\"\n          chatURL={`/${c.id}`}\n        />\n      );\n    });\n    return (\n      <div className=\"col-md-4 col-xl-3 chat\">\n        <div className=\"card mb-sm-3 mb-md-0 contacts_card\">\n          <div className=\"card-header\">\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                placeholder=\"Search...\"\n                name=\"\"\n                className=\"form-control search\"\n              />\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text search_btn\">\n                  <i className=\"fas fa-search\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-body contacts_body\">\n            <ul className=\"contacts\">{activeChats}</ul>\n          </div>\n          <div id=\"card-footer\">\n            <button\n              className=\"d-flex justify-content-start btn-sm btn-danger\"\n              onClick={() => this.openAddChatPopup()}\n            >\n              <i className=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\"></i>{\" \"}\n              <span>Add Chat</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(authActions.logout()),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n    getUserChats: (username, token) =>\n      dispatch(msgActions.getUserChats(username, token)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidepanel);\n","import * as actionTypes from \"./actionTypes\";\n\nexport const openAddChatPopup = () => {\n  return {\n    type: actionTypes.OPEN_ADD_CHAT_POPUP\n  };\n};\n\nexport const closeAddChatPopup = () => {\n  return {\n    type: actionTypes.CLOSE_ADD_CHAT_POPUP\n  };\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Profile extends React.Component {\n  render() {\n    if (this.props.token === null) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"card-header msg_head\">\n        <div className=\"d-flex bd-highlight\">\n          <div className=\"img_cont\">\n            <img\n              src=\"http://emilcarlsson.se/assets/harveyspecter.png\"\n              alt=\"\"\n              className=\"rounded-circle user_img\"\n            />\n            <span className=\"online_icon\"></span>\n          </div>\n          <div className=\"user_info\">\n            <span>{this.props.username}</span>\n            <p>1767 Messages</p>\n          </div>\n          <div className=\"video_cam\">\n            <span>\n              <i className=\"fas fa-video\"></i>\n            </span>\n            <span>\n              <i className=\"fas fa-phone\"></i>\n            </span>\n          </div>\n        </div>\n        <span id=\"action_menu_btn\">\n          <i className=\"fas fa-ellipsis-v\"></i>\n        </span>\n        <div className=\"action_menu\">\n          <ul>\n            <li>\n              <i className=\"fas fa-user-circle\"></i> View profile\n            </li>\n            <li>\n              <i className=\"fas fa-plus\"></i> Add to group\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.auth.username,\n    token: state.auth.token,\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n","import React from \"react\";\nimport { Form, Button, Select } from \"antd\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\n\nclass AddChatForm extends React.Component {\n  state = {\n    usernames: [],\n    error: null,\n  };\n\n  handleChange = (value) => {\n    this.setState({\n      usernames: value,\n    });\n  };\n\n  handleFinish = (values) => {\n    const { usernames } = this.state;\n    const combinedUsers = [...usernames, this.props.username];\n\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${this.props.token}`,\n    };\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    axios\n      .post(\"http://127.0.0.1:8000/chat/create/\", {\n        messages: [],\n        participants: combinedUsers,\n      })\n      .then((res) => {\n        this.props.history.push(`/${res.data.id}`);\n        this.props.closeAddChatPopup();\n        this.props.getUserChats(this.props.username, this.props.token);\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          error: err,\n        });\n      });\n  };\n  render() {\n    return (\n      <Form\n        layout=\"inline\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input the username of whom you want to chat with\",\n          },\n        ]}\n        onFinish={this.handleFinish}\n      >\n        {this.state.error ? `${this.state.error}` : null}\n        <Form.Item>\n          <Select\n            mode=\"tags\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Tags Mode\"\n            onChange={this.handleChange}\n          >\n            {[]}\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            // disabled={hasErrors(getFieldsError())}\n          >\n            Start a chat\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n    getUserChats: (username, token) =>\n      dispatch(messageActions.getUserChats(username, token)),\n  };\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(AddChatForm)\n);\n","import React from \"react\";\nimport { Modal } from \"antd\";\nimport AddChatForm from \"./Form\";\nclass AddChatModal extends React.Component {\n  render() {\n    return (\n      <Modal\n        centered\n        footer={null}\n        visible={this.props.isVisible}\n        onCancel={this.props.close}\n      >\n        <AddChatForm />\n      </Modal>\n    );\n  }\n}\n\nexport default AddChatModal;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as authActions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\nclass Login extends React.Component {\n  authenticate = (e) => {\n    e.preventDefault();\n    this.props.login(e.target.username.value, e.target.password.value);\n  };\n\n  render() {\n    return (\n      <div id=\"profile\">\n        <div className=\"wrap\">\n          {/*  */}\n          {this.props.username !== null ? <p>{this.props.username}</p> : null}\n\n          <div id=\"login\">\n            <div className=\"container-fluid\">\n              <div className=\"row no-gutter\">\n                {/* <div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div> */}\n                <div className=\"col-md-8 col-lg-6\">\n                  <div className=\"login d-flex align-items-center py-5\">\n                    <div className=\"container\">\n                      <div className=\"row\">\n                        <div className=\"col-md-9 col-lg-8 mx-auto\">\n                          <h2 className=\"login-heading mb-4 text-danger\">\n                            Welcome back!\n                          </h2>\n                          {this.props.loading ? (\n                            <Spin indicator={antIcon} />\n                          ) : this.props.isAuthenticated ? (\n                            <div>\n                              <Link to=\"/chat\">\n                                <button\n                                  // onClick={() => this.props.logout()}\n                                  className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-2\"\n                                >\n                                  <span>Mingle</span>\n                                </button>\n                              </Link>\n                              <Link to=\"/profile\">\n                                <button\n                                  // onClick={() => this.props.logout()}\n                                  className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-2\"\n                                >\n                                  <span>Account Settings</span>\n                                </button>\n                              </Link>\n                              <button\n                                onClick={() => this.props.logout()}\n                                className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-2\"\n                              >\n                                <span>Logout</span>\n                              </button>\n                            </div>\n                          ) : (\n                            <form method=\"POST\" onSubmit={this.authenticate}>\n                              <div className=\"form-label-group\">\n                                <input\n                                  type=\"username\"\n                                  name=\"username\"\n                                  id=\"inputEmail\"\n                                  className=\"form-control\"\n                                  placeholder=\"Username\"\n                                  required\n                                  autoFocus\n                                />\n                                <label htmlFor=\"inputEmail\">Username</label>\n                              </div>\n\n                              <div className=\"form-label-group\">\n                                <input\n                                  type=\"password\"\n                                  name=\"password\"\n                                  id=\"inputPassword\"\n                                  className=\"form-control\"\n                                  placeholder=\"Password\"\n                                  required\n                                />\n                                <label htmlFor=\"inputPassword\">Password</label>\n                              </div>\n\n                              <div className=\"custom-control custom-checkbox mb-3\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"custom-control-input\"\n                                  id=\"customCheck1\"\n                                />\n                                <label\n                                  className=\"custom-control-label text-danger\"\n                                  htmlFor=\"customCheck1\"\n                                >\n                                  Remember password\n                                </label>\n                              </div>\n                              <button\n                                className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-2\"\n                                type=\"submit\"\n                              >\n                                Log in\n                              </button>\n                              <div className=\"text-center\">\n                                <a className=\"small\" href=\"#\">\n                                  Forgot password?\n                                </a>\n                              </div>\n                            </form>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (userName, password) =>\n      dispatch(authActions.authLogin(userName, password)),\n    logout: () => dispatch(authActions.logout()),\n    signup: (username, email, password1, password2) =>\n      dispatch(authActions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport Login from \"./Login\";\n\nclass Homepage extends React.Component {\n  render() {\n    return <Login />;\n  }\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as authActions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nclass Login extends React.Component {\n  state = {\n    loginForm: true,\n  };\n\n  changeForm = () => {\n    this.setState({ loginForm: !this.state.loginForm });\n  };\n\n  authenticate = (e) => {\n    e.preventDefault();\n\n    this.props.signup(\n      e.target.username.value,\n      e.target.email.value,\n      e.target.password.value,\n      e.target.password2.value\n    );\n  };\n\n  render() {\n    return (\n      <div id=\"profile\">\n        <div className=\"wrap\">\n          {/*  */}\n          {this.props.username !== null ? <p>{this.props.username}</p> : null}\n\n          <div id=\"registration\">\n            <div className=\"container-fluid\">\n              <div className=\"row no-gutter\">\n                {/* <div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div> */}\n                <div className=\"col-md-8 col-lg-6\">\n                  <div className=\"login d-flex align-items-center py-5\">\n                    <div className=\"container\">\n                      <div className=\"row\">\n                        <div className=\"col-md-9 col-lg-8 mx-auto\">\n                          <h3 className=\"login-heading mb-4 text-danger\">\n                            Join Us!\n                          </h3>\n                          {this.props.loading ? (\n                            <Spin indicator={antIcon} />\n                          ) : this.props.isAuthenticated ? (\n                            <Link to=\"/profile\">\n                              <button className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-2\">\n                                <span>Set up Your Profile</span>\n                              </button>\n                            </Link>\n                          ) : (\n                            <form method=\"POST\" onSubmit={this.authenticate}>\n                              <div className=\"form-label-group\">\n                                <input\n                                  type=\"username\"\n                                  name=\"username\"\n                                  id=\"inputUsername\"\n                                  className=\"form-control\"\n                                  placeholder=\"Username\"\n                                  required\n                                  autoFocus\n                                />\n                                <label htmlFor=\"inputUsername\">Username</label>\n                              </div>\n                              <div className=\"form-label-group\">\n                                <input\n                                  type=\"email\"\n                                  name=\"email\"\n                                  id=\"inputEmail\"\n                                  className=\"form-control\"\n                                  placeholder=\"Email\"\n                                  required\n                                  autoFocus\n                                />\n                                <label htmlFor=\"inputEmail\">Email</label>\n                              </div>\n\n                              <div className=\"form-label-group\">\n                                <input\n                                  type=\"password\"\n                                  name=\"password\"\n                                  id=\"inputPassword\"\n                                  className=\"form-control\"\n                                  placeholder=\"Enter Password\"\n                                  required\n                                />\n                                <label htmlFor=\"inputPassword\">\n                                  Enter Password\n                                </label>\n                              </div>\n                              <div className=\"form-label-group\">\n                                <input\n                                  type=\"password\"\n                                  name=\"password2\"\n                                  id=\"inputPassword2\"\n                                  className=\"form-control\"\n                                  placeholder=\"Confirm Password\"\n                                  required\n                                />\n                                <label htmlFor=\"inputPassword2\">\n                                  Confirm Password\n                                </label>\n                              </div>\n\n                              <div className=\"custom-control custom-checkbox mb-3\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"custom-control-input\"\n                                  id=\"customCheck1\"\n                                />\n                                <label\n                                  className=\"custom-control-label\"\n                                  htmlFor=\"customCheck1\"\n                                >\n                                  Remember password\n                                </label>\n                              </div>\n                              <div>\n                                <button\n                                  className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-2\"\n                                  type=\"submit\"\n                                >\n                                  Sign Up\n                                </button>\n                              </div>\n                            </form>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (userName, password) =>\n      dispatch(authActions.authLogin(userName, password)),\n    logout: () => dispatch(authActions.logout()),\n    signup: (username, email, password1, password2) =>\n      dispatch(authActions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as authActions from \"../store/actions/auth\";\nimport logo from \"../assets/hey_mingle.png\";\n\nexport class Header extends Component {\n  render() {\n    const guestLinks = (\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item\">\n          <Link to=\"/register\" className=\"nav-link\">\n            Register\n          </Link>\n        </li>\n      </ul>\n    );\n\n    const authLinks = (\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item\">\n          <button className=\" nav-link btn-sm btn-danger\">\n            <i className=\"fa fa-cog fa-fw\" aria-hidden=\"true\"></i>{\" \"}\n            <span>Settings</span>\n          </button>\n        </li>\n        <li className=\"nav-item\">\n          <button\n            onClick={this.props.logout}\n            className=\"nav-link btn btn-outline-danger btn-sm text-dark\"\n          >\n            Logout\n          </button>\n        </li>\n      </ul>\n    );\n\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark bg-light sticky-top\">\n        <div className=\"container\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <Link to=\"/\" className=\"navbar-brand\">\n              <img src={logo} width=\"70\" height=\"30\" alt=\"\" />\n            </Link>\n          </div>\n          {this.props.isAuthenticated ? authLinks : guestLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.token !== null,\n  username: state.auth.username,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => dispatch(authActions.logout()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from \"react\";\nimport { Form, Input, InputNumber, Button } from \"antd\";\n\nclass UserProfile extends React.Component {\n  render() {\n    return <Demo />;\n  }\n}\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst validateMessages = {\n  required: \"${label} is required!\",\n  types: {\n    email: \"${label} is not validate email!\",\n    number: \"${label} is not a validate number!\",\n  },\n};\n\nconst Demo = () => {\n  const onFinish = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"nest-messages\"\n      onFinish={onFinish}\n      validateMessages={validateMessages}\n    >\n      <Form.Item\n        name={[\"user\", \"name\"]}\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={[\"user\", \"email\"]}\n        label=\"Email\"\n        rules={[\n          {\n            type: \"email\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={[\"user\", \"phone_number\"]}\n        label=\"phone_number\"\n        rules={[\n          {\n            type: \"number\",\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item name={[\"user\", \"website\"]} label=\"Website\">\n        <Input />\n      </Form.Item>\n      <Form.Item name={[\"user\", \"introduction\"]} label=\"Introduction\">\n        <Input.TextArea />\n      </Form.Item>\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default UserProfile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport * as authActions from \"./store/actions/auth\";\nimport * as navActions from \"./store/actions/nav\";\nimport * as msgActions from \"./store/actions/message\";\nimport BaseRouter from \"./routes\";\nimport Sidepanel from \"./containers/Sidepanel\";\nimport Profile from \"./containers/Profile\";\nimport WebSocketInstance from \"./websocket\";\nimport AddChatModal from \"./containers/Popup\";\nimport Homepage from \"./containers/Homepage\";\nimport Register from \"./containers/Register\";\nimport Navbar from \"./containers/Navbar\";\nimport UserProfile from \"./containers/UserProfile\";\nimport \"./App.css\";\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  constructor(props) {\n    super(props);\n    WebSocketInstance.addCallbacks(\n      this.props.setMessages.bind(this),\n      this.props.addMessage.bind(this)\n    );\n  }\n\n  render() {\n    return (\n      <Router>\n        <Navbar />\n        <div className=\"container-fluid h-100\">\n          <Switch>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/chat\">\n              <div className=\"container-fluid row justify-content-center\">\n                <Sidepanel />\n                <div className=\"col-md-8 col-xl-6 chat\">\n                  <div className=\"card\">\n                    <AddChatModal\n                      isVisible={this.props.showAddChatPopup}\n                      close={this.props.closeAddChatPopup}\n                    />\n                    <Profile />\n                    <BaseRouter />\n                  </div>\n                </div>\n              </div>\n            </Route>\n            <Route path=\"/profile\">\n              <UserProfile />\n            </Route>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    showAddChatPopup: state.nav.showAddChatPopup,\n    authenticated: state.auth.token,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignup: () => dispatch(authActions.authCheckState()),\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n    addMessage: (message) => dispatch(msgActions.addMessage(message)),\n    setMessages: (messages) => dispatch(msgActions.setMessages(messages)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: null,\n  username: null,\n  error: null,\n  loading: false,\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true,\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    username: action.username,\n    error: null,\n    loading: false,\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    username: null,\n  });\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  showAddChatPopup: false,\n};\n\nconst openAddChatPopup = (state, action) => {\n  return updateObject(state, { showAddChatPopup: true });\n};\n\nconst closeAddChatPopup = (state, action) => {\n  return updateObject(state, { showAddChatPopup: false });\n};\n\nconst navReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.OPEN_ADD_CHAT_POPUP:\n      return openAddChatPopup(state, action);\n    case actionTypes.CLOSE_ADD_CHAT_POPUP:\n      return closeAddChatPopup(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default navReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  messages: [],\n  chats: [],\n};\n\nconst addMessage = (state, action) => {\n  return updateObject(state, {\n    messages: [...state.messages, action.message],\n  });\n};\n\nconst setMessages = (state, action) => {\n  return updateObject(state, {\n    messages: action.messages.reverse(),\n  });\n};\n\nconst setChats = (state, action) => {\n  return updateObject(state, {\n    chats: action.chats,\n  });\n};\n\nconst msgReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_MESSAGE:\n      return addMessage(state, action);\n    case actionTypes.SET_MESSAGES:\n      return setMessages(state, action);\n    case actionTypes.GET_CHATS_SUCCESS:\n      return setChats(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default msgReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport \"antd/dist/antd.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport authReducer from \"./store/reducers/auth\";\nimport navReducer from \"./store/reducers/nav\";\nimport msgReducer from \"./store/reducers/message\";\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nfunction configureStore() {\n  const rootReducer = combineReducers({\n    auth: authReducer,\n    nav: navReducer,\n    message: msgReducer,\n  });\n  const store = createStore(\n    rootReducer,\n    composeEnhances(applyMiddleware(thunk))\n  );\n\n  return store;\n}\n\nconst store = configureStore();\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}