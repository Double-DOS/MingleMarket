{"version":3,"sources":["assets/hey_mingle.png","assets/Sunfire - Young Free And Single.mp3","assets/PLAYBOY - SHOWER TOGETHER - LUXURY.mp4","store/actions/auth.js","store/actions/actionTypes.js","store/actions/message.js","websocket.js","hoc/hoc.js","containers/Chat.js","routes.js","components/Contact.js","containers/Sidepanel.js","store/actions/nav.js","containers/Profile.js","containers/Form.js","containers/Popup.js","containers/Login.js","containers/Homepage.js","containers/Register.js","containers/Navbar.js","containers/UserProfile.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","store/reducers/nav.js","store/reducers/message.js","index.js"],"names":["module","exports","baseUrl","authSuccess","username","token","type","authFail","error","logout","headers","Authorization","axios","post","then","res","localStorage","removeItem","authLogin","password","dispatch","data","setItem","catch","err","authSignup","email","password1","password2","getUserProfile","get","profile","getUserChats","defaults","chats","WebSocketService","callbacks","this","socketRef","instance","chatURL","path","console","log","WebSocket","onopen","socketNewMessage","JSON","stringify","command","onmessage","e","onerror","mesage","onclose","connect","close","parsedData","parse","Object","keys","length","messages","message","chatId","sendMessage","from","content","messagesCallbacks","newMessageCallbacks","send","mesasge","readyState","callback","socket","recursion","waitForSocketConnection","setTimeout","WebSocketInstance","getInstance","Hoc","props","children","Chat","state","messageChangeHandler","event","setState","target","value","sendMessageHandler","preventDefault","messageObject","match","params","chatID","newChatMessage","renderTimestamp","timestamp","timeDiff","Math","round","Date","getTime","renderMessages","currentUser","map","i","arr","key","id","className","author","src","alt","initialiseChat","fetchMessages","newProps","disconnect","component","onSubmit","onChange","required","placeholder","aria-hidden","React","Component","auth","BaseRouter","useRouteMatch","Contact","url","to","style","color","name","Sidepanel","undefined","waitForAuthDetails","addChat","activeChats","c","status","onClick","openAddChatPopup","authActions","msgActions","Profile","AddChatForm","usernames","handleChange","handleFinish","values","combinedUsers","xsrfHeaderName","xsrfCookieName","participants","history","push","closeAddChatPopup","layout","rules","onFinish","Item","mode","width","htmlType","withRouter","messageActions","AddChatModal","centered","footer","visible","isVisible","onCancel","antIcon","LoadingOutlined","fontSize","spin","Login","authenticate","login","loading","indicator","isAuthenticated","method","autoFocus","htmlFor","href","userName","signup","Homepage","autoPlay","loop","muted","position","left","top","height","objectFit","transform","zIndex","Playboy","loginForm","changeForm","Header","music","guestLinks","Music","autostart","size","defaultChecked","authLinks","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","data-target","aria-controls","aria-label","logo","UserProfile","photo","toUpperCase","slice","bio","phone_number","catch_phrase","getProfile","App","addCallbacks","setMessages","bind","addMessage","onTryAutoSignup","Navbar","Register","showAddChatPopup","exact","nav","authenticated","getItem","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","authStart","action","authLogout","userProfile","authReducer","navReducer","reverse","setChats","msgReducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","rootReducer","combineReducers","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5bca38f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hey_mingle.836efd55.png\";","module.exports = __webpack_public_path__ + \"static/media/Sunfire - Young Free And Single.e2603b8f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/PLAYBOY - SHOWER TOGETHER - LUXURY.0599c3ac.mp4\";","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\nexport const baseUrl = \"https://mingle-market.herokuapp.com/\";\n\nexport const authSuccess = (username, token) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username: username,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = (token) => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Token ${token}`,\n  };\n  axios\n    .post(baseUrl + \"accounts/api/auth/logout/\", null, {\n      headers: headers,\n    })\n    .then((res) => {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"username\");\n    });\n\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(baseUrl + \"accounts/api/auth/login\", {\n        username: username,\n        password: password,\n      })\n      .then((res) => {\n        const token = res.data.token;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", username);\n        dispatch(authSuccess(username, token));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(baseUrl + \"accounts/api/auth/register\", {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2,\n      })\n      .then((res) => {\n        const token = res.data.token;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", username);\n        dispatch(authSuccess(username, token));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      dispatch(authSuccess(username, token));\n    }\n  };\n};\n\nconst getUserProfileSuccess = (profile) => {\n  return {\n    type: actionTypes.GET_PROFILE_SUCCESS,\n    profile: profile,\n  };\n};\n\nexport const getUserProfile = (token) => {\n  return (dispatch) => {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`,\n    };\n    axios\n      .get(baseUrl + \"chat/contact_detail/\", { headers: headers })\n      .then((res) => {\n        dispatch(getUserProfileSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const OPEN_ADD_CHAT_POPUP = \"OPEN_ADD_CHAT_POPUP\";\nexport const CLOSE_ADD_CHAT_POPUP = \"CLOSE_ADD_CHAT_POPUP\";\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\nexport const SET_MESSAGES = \"SET_MESSAGES\";\nexport const GET_CHATS_SUCCESS = \"GET_CHATS_SUCCESS\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const GET_PROFILE_FAIL = \"GET_PROFILE_FAIL\";\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { baseUrl } from \"./auth\";\n\nexport const addMessage = (message) => {\n  return {\n    type: actionTypes.ADD_MESSAGE,\n    message: message,\n  };\n};\n\nexport const setMessages = (messages) => {\n  return {\n    type: actionTypes.SET_MESSAGES,\n    messages: messages,\n  };\n};\n\nconst getUserChatsSuccess = (chats) => {\n  return {\n    type: actionTypes.GET_CHATS_SUCCESS,\n    chats: chats,\n  };\n};\n\nexport const getUserChats = (username, token) => {\n  return (dispatch) => {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`,\n    };\n    axios\n      .get(baseUrl + `chat/?username=${username}`)\n      .then((res) => dispatch(getUserChatsSuccess(res.data)));\n  };\n};\n","class WebSocketService {\n  static instance = null;\n  callbacks = {};\n  static getInstance() {\n    if (!WebSocketService.instance) {\n      WebSocketService.instance = new WebSocketService();\n    }\n    return WebSocketService.instance;\n  }\n  constructor() {\n    this.socketRef = null;\n  }\n  connect(chatURL) {\n    // var ws_scheme = window.location.protocol == \"https:\" ? \"wss\" : \"ws\";\n    // const path =\n    //   ws_scheme + \"://\" + window.location.host + \"/ws/chat\" + `/${chatURL}`;\n    const path = `ws://localhost:8000/ws/chat/${chatURL}/`;\n    console.log(path);\n    this.socketRef = new WebSocket(path);\n    this.socketRef.onopen = () => {\n      console.log(\"websocket is open\");\n    };\n    this.socketNewMessage(JSON.stringify({ command: \"fetch_messages\" }));\n    this.socketRef.onmessage = (e) => {\n      this.socketNewMessage(e.data);\n    };\n    this.socketRef.onerror = (e) => {\n      console.log(e.mesage);\n    };\n    this.socketRef.onclose = () => {\n      console.log(\"websocket is closed\");\n      this.connect();\n    };\n  }\n  disconnect() {\n    this.socketRef.close();\n    this.socketRef.onclose = () => {\n      console.log(\"socket is closed\");\n    };\n  }\n  socketNewMessage(data) {\n    const parsedData = JSON.parse(data);\n    const command = parsedData.command;\n    if (Object.keys(this.callbacks).length === 0) {\n      return;\n    }\n    if (command === \"messages\") {\n      this.callbacks[command](parsedData.messages);\n    }\n    if (command === \"new_message\") {\n      this.callbacks[command](parsedData.message);\n    }\n  }\n\n  fetchMessages(username, chatId) {\n    this.sendMessage({\n      command: \"fetch_messages\",\n      username: username,\n      chatId: chatId,\n    });\n  }\n\n  newChatMessage(message) {\n    this.sendMessage({\n      command: \"new_message\",\n      from: message.from,\n      message: message.content,\n      chatId: message.chatId,\n    });\n  }\n\n  addCallbacks(messagesCallbacks, newMessageCallbacks) {\n    this.callbacks[\"messages\"] = messagesCallbacks;\n    this.callbacks[\"new_message\"] = newMessageCallbacks;\n  }\n\n  sendMessage(data) {\n    try {\n      this.socketRef.send(JSON.stringify({ ...data }));\n    } catch (err) {\n      console.log(err.mesasge);\n    }\n  }\n\n  state() {\n    return this.socketRef.readyState;\n  }\n\n  waitForSocketConnection(callback) {\n    const socket = this.socketRef;\n    const recursion = this.waitForSocketConnection;\n    setTimeout(function () {\n      if (socket.readyState === 1) {\n        console.log(\"Connection is secure\");\n        if (callback != null) {\n          callback();\n        }\n        return;\n      } else {\n        console.log(\"Waiting for connection....\");\n        recursion(callback);\n      }\n    }, 1);\n  }\n}\n\nconst WebSocketInstance = WebSocketService.getInstance();\n\nexport default WebSocketInstance;\n","const Hoc = (props) => props.children;\n\nexport default Hoc;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport WebSocketInstance from \"../websocket\";\nimport Hoc from \"../hoc/hoc\";\n\nclass Chat extends React.Component {\n  state = { message: \"\" };\n  initialiseChat() {\n    this.waitForSocketConnection(() => {\n      WebSocketInstance.fetchMessages(\n        this.props.username,\n        this.props.match.params.chatID\n      );\n    });\n    WebSocketInstance.connect(this.props.match.params.chatID);\n  }\n  constructor(props) {\n    super(props);\n    this.initialiseChat();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    console.log(newProps);\n    if (this.props.match.params.chatID !== newProps.match.params.chatID) {\n      WebSocketInstance.disconnect();\n      this.waitForSocketConnection(() => {\n        WebSocketInstance.fetchMessages(\n          this.props.username,\n          newProps.match.params.chatID\n        );\n      });\n      WebSocketInstance.connect(newProps.match.params.chatID);\n    }\n  }\n  waitForSocketConnection(callback) {\n    const component = this;\n    setTimeout(function () {\n      if (WebSocketInstance.state() === 1) {\n        console.log(\"Connection is made\");\n        callback();\n        return;\n      } else {\n        console.log(\"wait for connection...\");\n        component.waitForSocketConnection(callback);\n      }\n    }, 100);\n  }\n\n  messageChangeHandler = (event) => {\n    this.setState({\n      message: event.target.value,\n    });\n  };\n\n  sendMessageHandler = (e) => {\n    e.preventDefault();\n    const messageObject = {\n      from: this.props.username,\n      content: this.state.message,\n      chatId: this.props.match.params.chatID,\n    };\n    WebSocketInstance.newChatMessage(messageObject);\n    this.setState({\n      message: \"\",\n    });\n  };\n\n  renderTimestamp = (timestamp) => {\n    let prefix = \"\";\n    const timeDiff = Math.round(\n      (new Date().getTime() - new Date(timestamp).getTime()) / 60000\n    );\n    if (timeDiff < 1) {\n      // less than one minute ago\n      prefix = \"just now...\";\n    } else if (timeDiff < 60 && timeDiff > 1) {\n      // less than sixty minutes ago\n      prefix = `${timeDiff} minutes ago`;\n    } else if (timeDiff < 24 * 60 && timeDiff > 60) {\n      // less than 24 hours ago\n      prefix = `${Math.round(timeDiff / 60)} hours ago`;\n    } else if (timeDiff < 31 * 24 * 60 && timeDiff > 24 * 60) {\n      // less than 7 days ago\n      prefix = `${Math.round(timeDiff / (60 * 24))} days ago`;\n    } else {\n      prefix = `${new Date(timestamp)}`;\n    }\n    return prefix;\n  };\n\n  renderMessages = (messages) => {\n    const currentUser = this.props.username;\n    return messages.map((message, i, arr) => (\n      <div\n        key={message.id}\n        className={\n          message.author === currentUser\n            ? \"d-flex justify-content-end mb-4\"\n            : \"d-flex justify-content-start mb-4\"\n        }\n      >\n        <div className=\"img_cont_msg\">\n          <img\n            src=\"http://emilcarlsson.se/assets/mikeross.png\"\n            className=\"rounded-circle user_img_msg\"\n            alt=\"user\"\n          />\n        </div>\n        <div className=\"msg_cotainer\">\n          {message.content}\n          <span className=\"msg_time\">\n            {this.renderTimestamp(message.timestamp)}\n          </span>\n        </div>\n      </div>\n    ));\n  };\n  /*\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }*/\n\n  // componentDidUpdate(newProps) {\n  //   console.log(newProps);\n  //   if (this.props.match.params.chatID !== newProps.match.params.chatID) {\n  //     WebSocketInstance.disconnect();\n  //     this.waitForSocketConnection(() => {\n  //       WebSocketInstance.fetchMessages(\n  //         this.props.username,\n  //         newProps.match.params.chatID\n  //       );\n  //     });\n  //     WebSocketInstance.connect(newProps.match.params.chatID);\n  //   }\n  // }\n\n  render() {\n    return (\n      <Hoc>\n        <div className=\"card-body msg_card_body\">\n          {this.props.messages && this.renderMessages(this.props.messages)}\n        </div>\n        <div className=\"card-footer\">\n          <form onSubmit={this.sendMessageHandler}>\n            <div className=\"input-group\">\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text attach_btn\">\n                  <i className=\"fas fa-paperclip\"></i>\n                </span>\n              </div>\n              <input\n                onChange={this.messageChangeHandler}\n                value={this.state.message}\n                required\n                className=\"form-control type_msg\"\n                id=\"chat-message-input\"\n                type=\"text\"\n                placeholder=\"Type your message...\"\n              />\n              <div id=\"chat-message-submit\" className=\"input-group-append\">\n                <span className=\"input-group-text send_btn\">\n                  <i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\n                </span>\n              </div>\n            </div>\n          </form>\n        </div>\n      </Hoc>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.auth.username,\n    messages: state.message.messages,\n  };\n};\n\nexport default connect(mapStateToProps)(Chat);\n","import React from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport Chat from \"./containers/Chat\";\n\nexport default BaseRouter;\nfunction BaseRouter() {\n  let { path } = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={`${path}/:chatID`} component={Chat} />\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\n\nfunction Contact(props) {\n  let { url } = useRouteMatch();\n\n  return (\n    <NavLink to={`${url}${props.chatURL}`} style={{ color: \"#fff\" }}>\n      <li className=\"active\">\n        <div className=\"d-flex bd-highlight\">\n          {/* <div className=\"img_cont\">\n            <img\n              src={props.picURL}\n              alt={props.name}\n              className=\"rounded-circle user_img\"\n            />\n            <span className={`${props.status}_icon`}></span>\n          </div> */}\n          <div className=\"user_info\">\n            <span>{props.name}</span>\n            {/* <p>Kalid is online</p> */}\n          </div>\n        </div>\n      </li>\n    </NavLink>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as authActions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport * as msgActions from \"../store/actions/message\";\nimport Contact from \"../components/Contact\";\n\nclass Sidepanel extends React.Component {\n  waitForAuthDetails() {\n    const component = this;\n    setTimeout(() => {\n      if (\n        component.props.token !== null &&\n        component.props.token !== undefined\n      ) {\n        component.props.getUserChats(\n          component.props.username,\n          component.props.token\n        );\n        return;\n      } else {\n        console.log(\"waiting for auth details\");\n        component.waitForAuthDetails();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.waitForAuthDetails();\n  }\n\n  openAddChatPopup() {\n    this.props.addChat();\n  }\n  render() {\n    const activeChats = this.props.chats.map((c) => {\n      return (\n        <Contact\n          key={c.id}\n          name={`${c.name}`}\n          status=\"online\"\n          // picURL=\"http://emilcarlsson.se/assets/louislitt.png\"\n          chatURL={`/${c.id}`}\n        />\n      );\n    });\n    return (\n      <div className=\"col-md-4 col-xl-3 chat\">\n        <div className=\"card mb-sm-3 mb-md-0 contacts_card\">\n          <div className=\"card-header\">\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                placeholder=\"Search...\"\n                name=\"\"\n                className=\"form-control search\"\n              />\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text search_btn\">\n                  <i className=\"fas fa-search\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-body contacts_body\">\n            <ul className=\"contacts\">{activeChats}</ul>\n          </div>\n          <div id=\"card-footer\">\n            <button\n              className=\"d-flex justify-content-start btn-sm btn-danger\"\n              onClick={() => this.openAddChatPopup()}\n            >\n              <i className=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\"></i>{\" \"}\n              <span>Add Chat</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(authActions.logout()),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n    getUserChats: (username, token) =>\n      dispatch(msgActions.getUserChats(username, token)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidepanel);\n","import * as actionTypes from \"./actionTypes\";\n\nexport const openAddChatPopup = () => {\n  return {\n    type: actionTypes.OPEN_ADD_CHAT_POPUP\n  };\n};\n\nexport const closeAddChatPopup = () => {\n  return {\n    type: actionTypes.CLOSE_ADD_CHAT_POPUP\n  };\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Profile extends React.Component {\n  render() {\n    if (this.props.token === null) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"card-header msg_head\">\n        <div className=\"d-flex bd-highlight\">\n          <div className=\"img_cont\">\n            <img\n              src=\"http://emilcarlsson.se/assets/harveyspecter.png\"\n              alt=\"\"\n              className=\"rounded-circle user_img\"\n            />\n            <span className=\"online_icon\"></span>\n          </div>\n          <div className=\"user_info\">\n            <span>{this.props.username}</span>\n            <p>1767 Messages</p>\n          </div>\n          <div className=\"video_cam\">\n            <span>\n              <i className=\"fas fa-video\"></i>\n            </span>\n            <span>\n              <i className=\"fas fa-phone\"></i>\n            </span>\n          </div>\n        </div>\n        <span id=\"action_menu_btn\">\n          <i className=\"fas fa-ellipsis-v\"></i>\n        </span>\n        <div className=\"action_menu\">\n          <ul>\n            <li>\n              <i className=\"fas fa-user-circle\"></i> View profile\n            </li>\n            <li>\n              <i className=\"fas fa-plus\"></i> Add to group\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.auth.username,\n    token: state.auth.token,\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n","import React from \"react\";\nimport { Form, Button, Select } from \"antd\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nimport { baseUrl } from \"../store/actions/auth\";\n\nclass AddChatForm extends React.Component {\n  state = {\n    usernames: [],\n    error: null,\n  };\n\n  handleChange = (value) => {\n    this.setState({\n      usernames: value,\n    });\n  };\n\n  handleFinish = (values) => {\n    const { usernames } = this.state;\n    const combinedUsers = [...usernames, this.props.username];\n\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${this.props.token}`,\n    };\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    axios\n      .post(baseUrl + \"chat/create/\", {\n        messages: [],\n        participants: combinedUsers,\n      })\n      .then((res) => {\n        this.props.history.push(`/${res.data.id}`);\n        this.props.closeAddChatPopup();\n        this.props.getUserChats(this.props.username, this.props.token);\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          error: err,\n        });\n      });\n  };\n  render() {\n    return (\n      <Form\n        layout=\"inline\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input the username of whom you want to chat with\",\n          },\n        ]}\n        onFinish={this.handleFinish}\n      >\n        {this.state.error ? `${this.state.error}` : null}\n        <Form.Item>\n          <Select\n            mode=\"tags\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Tags Mode\"\n            onChange={this.handleChange}\n          >\n            {[]}\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            // disabled={hasErrors(getFieldsError())}\n          >\n            Start a chat\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n    getUserChats: (username, token) =>\n      dispatch(messageActions.getUserChats(username, token)),\n  };\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(AddChatForm)\n);\n","import React from \"react\";\nimport { Modal } from \"antd\";\nimport AddChatForm from \"./Form\";\nclass AddChatModal extends React.Component {\n  render() {\n    return (\n      <Modal\n        centered\n        footer={null}\n        visible={this.props.isVisible}\n        onCancel={this.props.close}\n      >\n        <AddChatForm />\n      </Modal>\n    );\n  }\n}\n\nexport default AddChatModal;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as authActions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\nclass Login extends React.Component {\n  authenticate = (e) => {\n    e.preventDefault();\n    this.props.login(e.target.username.value, e.target.password.value);\n  };\n\n  render() {\n    return (\n      <div id=\"profile\">\n        <div className=\"wrap\">\n          {/*  */}\n\n          <div id=\"login\">\n            <div className=\"container-fluid\">\n              <div className=\"row no-gutter\">\n                {/* <div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div> */}\n                <div className=\"col-md-8 col-lg-6\">\n                  <div className=\"login d-flex align-items-center py-5\">\n                    <div className=\"container\">\n                      <div className=\"row\">\n                        <div className=\"col-md-9 col-lg-8 mx-auto\">\n                          <h2 className=\"login-heading mb-4 text-danger\">\n                            Welcome back!\n                          </h2>\n                          {this.props.loading ? (\n                            <Spin indicator={antIcon} />\n                          ) : this.props.isAuthenticated ? (\n                            <div>\n                              <Link to=\"/chat\">\n                                <button\n                                  // onClick={() => this.props.logout()}\n                                  className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-2\"\n                                >\n                                  <span>Mingle</span>\n                                </button>\n                              </Link>\n                              <Link to=\"/profile\">\n                                <button\n                                  // onClick={() => this.props.logout()}\n                                  className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-2\"\n                                >\n                                  <span>Account Settings</span>\n                                </button>\n                              </Link>\n                              <button\n                                onClick={() => this.props.logout()}\n                                className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-2\"\n                              >\n                                <span>Logout</span>\n                              </button>\n                            </div>\n                          ) : (\n                            <form method=\"POST\" onSubmit={this.authenticate}>\n                              <div className=\"form-label-group\">\n                                <input\n                                  type=\"username\"\n                                  name=\"username\"\n                                  id=\"inputEmail\"\n                                  className=\"form-control\"\n                                  placeholder=\"Username\"\n                                  required\n                                  autoFocus\n                                />\n                                <label htmlFor=\"inputEmail\">Username</label>\n                              </div>\n\n                              <div className=\"form-label-group\">\n                                <input\n                                  type=\"password\"\n                                  name=\"password\"\n                                  id=\"inputPassword\"\n                                  className=\"form-control\"\n                                  placeholder=\"Password\"\n                                  required\n                                />\n                                <label htmlFor=\"inputPassword\">Password</label>\n                              </div>\n\n                              <div className=\"custom-control custom-checkbox mb-3\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"custom-control-input\"\n                                  id=\"customCheck1\"\n                                />\n                                <label\n                                  className=\"custom-control-label text-danger\"\n                                  htmlFor=\"customCheck1\"\n                                >\n                                  Remember password\n                                </label>\n                              </div>\n                              <button\n                                className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-2\"\n                                type=\"submit\"\n                              >\n                                Log in\n                              </button>\n                              <div className=\"text-center\">\n                                <a className=\"small\" href=\"#\">\n                                  Forgot password?\n                                </a>\n                              </div>\n                            </form>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (userName, password) =>\n      dispatch(authActions.authLogin(userName, password)),\n    logout: () => dispatch(authActions.logout()),\n    signup: (username, email, password1, password2) =>\n      dispatch(authActions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Fragment } from \"react\";\nimport Login from \"./Login\";\nimport Playboy from \"../assets/PLAYBOY - SHOWER TOGETHER - LUXURY.mp4\";\n\nclass Homepage extends React.Component {\n  render() {\n    return (\n      <Fragment>\n        <video\n          autoPlay\n          loop\n          muted\n          style={{\n            position: \"absolute\",\n            width: \"100%\",\n            left: \"50%\",\n            top: \"50%\",\n            height: \"100%\",\n            objectFit: \"cover\",\n            transform: \"translate(-50%, -50%)\",\n            zIndex: \"-1\",\n          }}\n        >\n          <source src={Playboy} type=\"video/mp4\" />\n        </video>\n\n        <Login />\n      </Fragment>\n    );\n  }\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as authActions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nclass Login extends React.Component {\n  state = {\n    loginForm: true,\n  };\n\n  changeForm = () => {\n    this.setState({ loginForm: !this.state.loginForm });\n  };\n\n  authenticate = (e) => {\n    e.preventDefault();\n\n    this.props.signup(\n      e.target.username.value,\n      e.target.email.value,\n      e.target.password.value,\n      e.target.password2.value\n    );\n  };\n\n  render() {\n    return (\n      <div id=\"profile\">\n        <div className=\"wrap\">\n          {/*  */}\n          {this.props.username !== null ? <p>{this.props.username}</p> : null}\n\n          <div id=\"registration\">\n            <div className=\"container-fluid\">\n              <div className=\"row no-gutter\">\n                {/* <div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div> */}\n                <div className=\"col-md-8 col-lg-6\">\n                  <div className=\"login d-flex align-items-center py-5\">\n                    <div className=\"container\">\n                      <div className=\"row\">\n                        <div className=\"col-md-9 col-lg-8 mx-auto\">\n                          <h3 className=\"login-heading mb-4 text-danger\">\n                            Join Us!\n                          </h3>\n                          {this.props.loading ? (\n                            <Spin indicator={antIcon} />\n                          ) : this.props.isAuthenticated ? (\n                            <Link to=\"/profile\">\n                              <button className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-2\">\n                                <span>Set up Your Profile</span>\n                              </button>\n                            </Link>\n                          ) : (\n                            <form method=\"POST\" onSubmit={this.authenticate}>\n                              <div className=\"form-label-group\">\n                                <input\n                                  type=\"username\"\n                                  name=\"username\"\n                                  id=\"inputUsername\"\n                                  className=\"form-control\"\n                                  placeholder=\"Username\"\n                                  required\n                                  autoFocus\n                                />\n                                <label htmlFor=\"inputUsername\">Username</label>\n                              </div>\n                              <div className=\"form-label-group\">\n                                <input\n                                  type=\"email\"\n                                  name=\"email\"\n                                  id=\"inputEmail\"\n                                  className=\"form-control\"\n                                  placeholder=\"Email\"\n                                  required\n                                  autoFocus\n                                />\n                                <label htmlFor=\"inputEmail\">Email</label>\n                              </div>\n\n                              <div className=\"form-label-group\">\n                                <input\n                                  type=\"password\"\n                                  name=\"password\"\n                                  id=\"inputPassword\"\n                                  className=\"form-control\"\n                                  placeholder=\"Enter Password\"\n                                  required\n                                />\n                                <label htmlFor=\"inputPassword\">\n                                  Enter Password\n                                </label>\n                              </div>\n                              <div className=\"form-label-group\">\n                                <input\n                                  type=\"password\"\n                                  name=\"password2\"\n                                  id=\"inputPassword2\"\n                                  className=\"form-control\"\n                                  placeholder=\"Confirm Password\"\n                                  required\n                                />\n                                <label htmlFor=\"inputPassword2\">\n                                  Confirm Password\n                                </label>\n                              </div>\n\n                              <div className=\"custom-control custom-checkbox mb-3\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"custom-control-input\"\n                                  id=\"customCheck1\"\n                                />\n                                <label\n                                  className=\"custom-control-label\"\n                                  htmlFor=\"customCheck1\"\n                                >\n                                  Remember password\n                                </label>\n                              </div>\n                              <div>\n                                <button\n                                  className=\"btn btn-lg btn-danger btn-block btn-login text-uppercase font-weight-bold mb-2\"\n                                  type=\"submit\"\n                                >\n                                  Sign Up\n                                </button>\n                              </div>\n                            </form>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (userName, password) =>\n      dispatch(authActions.authLogin(userName, password)),\n    logout: () => dispatch(authActions.logout()),\n    signup: (username, email, password1, password2) =>\n      dispatch(authActions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Switch } from \"antd\";\nimport * as authActions from \"../store/actions/auth\";\nimport logo from \"../assets/hey_mingle.png\";\nimport Music from \"../assets/Sunfire - Young Free And Single.mp3\";\n\nexport class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      music: \"on\",\n    };\n  }\n\n  onChange = () => {\n    this.setState({ music: \"off\" });\n  };\n  render() {\n    const guestLinks = (\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item\">\n          <Link to=\"/register\" className=\"nav-link\">\n            <button className=\"nav-link btn btn-outline-danger btn-sm text-dark\">\n              Register\n            </button>\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          {this.state.music === \"on\" ? (\n            <embed\n              src={Music}\n              autostart=\"true\"\n              loop={true}\n              width=\"0\"\n              height=\"0\"\n            ></embed>\n          ) : (\n            \"\"\n          )}\n        </li>\n        <li className=\"nav-item\">\n          Music <Switch size=\"small\" defaultChecked onChange={this.onChange} />\n        </li>\n      </ul>\n    );\n\n    const authLinks = (\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item dropdown\">\n          <div\n            className=\"nav-link dropdown-toggle text-dark\"\n            id=\"navbarDropdown2\"\n            role=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            Hi, {this.props.username}\n          </div>\n          <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown2\">\n            <Link to=\"/profile\" className=\"dropdown-item\">\n              My Profile\n            </Link>\n\n            <div className=\"dropdown-divider\"></div>\n            <div className=\"dropdown-item\">\n              Music{\" \"}\n              <Switch size=\"small\" defaultChecked onChange={this.onChange} />\n            </div>\n          </div>\n        </li>\n        <li className=\"nav-item\">\n          {this.state.music === \"on\" ? (\n            <embed\n              src={Music}\n              autostart=\"true\"\n              loop={true}\n              width=\"0\"\n              height=\"0\"\n            ></embed>\n          ) : (\n            \"\"\n          )}\n        </li>\n        <li className=\"nav-item\">\n          <button\n            onClick={(token) => this.props.logout(this.props.token)}\n            className=\"nav-link btn btn-outline-danger btn-sm text-dark mx-2\"\n          >\n            Logout\n          </button>\n        </li>\n      </ul>\n    );\n\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark bg-light sticky-top\">\n        <div className=\"container\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <Link to=\"/\" className=\"navbar-brand\">\n              <img src={logo} width=\"70\" height=\"30\" alt=\"\" />\n            </Link>\n          </div>\n          {this.props.isAuthenticated ? authLinks : guestLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.token !== null,\n  username: state.auth.username,\n  token: state.auth.token,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  logout: (token) => dispatch(authActions.logout(token)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as authActions from \"../store/actions/auth\";\n\nclass UserProfile extends React.Component {\n  render() {\n    if (this.props.token === null) {\n      return <Redirect to=\"/\" />;\n    } else {\n      return (\n        <div className=\"container portfolio\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"heading\">\n                <img src=\"https://image.ibb.co/cbCMvA/logo.png\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"bio-info\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"bio-image\">\n                      <img\n                        src={this.props.profile.photo}\n                        alt=\"user_profile_image\"\n                        width=\"500\"\n                        height=\"500\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"bio-content\">\n                  <h1>\n                    Hi there, I'm{\" \"}\n                    {this.props.username[0].toUpperCase() +\n                      this.props.username.slice(1)}\n                  </h1>\n                  <h6>{this.props.profile.bio}</h6>\n                  <hr />\n                  <span>{this.props.profile.phone_number}</span>\n                  <p>{this.props.profile.catch_phrase}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.auth.username,\n    token: state.auth.token,\n    profile: state.auth.profile,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProfile: (token) => dispatch(authActions.getUserProfile(token)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport * as authActions from \"./store/actions/auth\";\nimport * as navActions from \"./store/actions/nav\";\nimport * as msgActions from \"./store/actions/message\";\nimport BaseRouter from \"./routes\";\nimport Sidepanel from \"./containers/Sidepanel\";\nimport Profile from \"./containers/Profile\";\nimport WebSocketInstance from \"./websocket\";\nimport AddChatModal from \"./containers/Popup\";\nimport Homepage from \"./containers/Homepage\";\nimport Register from \"./containers/Register\";\nimport Navbar from \"./containers/Navbar\";\nimport UserProfile from \"./containers/UserProfile\";\nimport logo from \"./assets/hey_mingle.png\";\n\nimport \"./App.css\";\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  constructor(props) {\n    super(props);\n    WebSocketInstance.addCallbacks(\n      this.props.setMessages.bind(this),\n      this.props.addMessage.bind(this)\n    );\n  }\n\n  render() {\n    this.props.getProfile(this.props.token);\n    return (\n      <Router>\n        <Navbar />\n\n        <div\n          className=\"container-fluid h-100 app\"\n          // style={{\n          //   backgroundImage: `url(${bgimg})`,\n          //   backgroundRepeat: \"no-repeat\",\n          //   backgroundSize: \"cover\",\n          // }}\n        >\n          <Switch>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/chat\">\n              <img src={logo} width=\"100%\" height=\"500\" />\n              <div className=\"container-fluid row justify-content-center\">\n                <Sidepanel />\n                <div className=\"col-md-8 col-xl-6 chat\">\n                  <div className=\"card\">\n                    <AddChatModal\n                      isVisible={this.props.showAddChatPopup}\n                      close={this.props.closeAddChatPopup}\n                    />\n                    <Profile />\n                    <BaseRouter />\n                  </div>\n                </div>\n              </div>\n            </Route>\n            <Route path=\"/profile\">\n              <UserProfile />\n            </Route>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    showAddChatPopup: state.nav.showAddChatPopup,\n    authenticated: state.auth.token,\n    token: state.auth.token,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignup: () => dispatch(authActions.authCheckState()),\n    getProfile: (token) => dispatch(authActions.getUserProfile(token)),\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n    addMessage: (message) => dispatch(msgActions.addMessage(message)),\n    setMessages: (messages) => dispatch(msgActions.setMessages(messages)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: null,\n  username: null,\n  error: null,\n  loading: false,\n  profile: null,\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true,\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    username: action.username,\n    error: null,\n    loading: false,\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    username: null,\n  });\n};\n\nconst userProfile = (state, action) => {\n  return updateObject(state, {\n    profile: action.profile,\n  });\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.GET_PROFILE_SUCCESS:\n      return userProfile(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  showAddChatPopup: false,\n};\n\nconst openAddChatPopup = (state, action) => {\n  return updateObject(state, { showAddChatPopup: true });\n};\n\nconst closeAddChatPopup = (state, action) => {\n  return updateObject(state, { showAddChatPopup: false });\n};\n\nconst navReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.OPEN_ADD_CHAT_POPUP:\n      return openAddChatPopup(state, action);\n    case actionTypes.CLOSE_ADD_CHAT_POPUP:\n      return closeAddChatPopup(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default navReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  messages: [],\n  chats: [],\n};\n\nconst addMessage = (state, action) => {\n  return updateObject(state, {\n    messages: [...state.messages, action.message],\n  });\n};\n\nconst setMessages = (state, action) => {\n  return updateObject(state, {\n    messages: action.messages.reverse(),\n  });\n};\n\nconst setChats = (state, action) => {\n  return updateObject(state, {\n    chats: action.chats,\n  });\n};\n\nconst msgReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_MESSAGE:\n      return addMessage(state, action);\n    case actionTypes.SET_MESSAGES:\n      return setMessages(state, action);\n    case actionTypes.GET_CHATS_SUCCESS:\n      return setChats(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default msgReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport \"antd/dist/antd.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport authReducer from \"./store/reducers/auth\";\nimport navReducer from \"./store/reducers/nav\";\nimport msgReducer from \"./store/reducers/message\";\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nfunction configureStore() {\n  const rootReducer = combineReducers({\n    auth: authReducer,\n    nav: navReducer,\n    message: msgReducer,\n  });\n  const store = createStore(\n    rootReducer,\n    composeEnhances(applyMiddleware(thunk))\n  );\n\n  return store;\n}\n\nconst store = configureStore();\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}